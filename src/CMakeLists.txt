PROJECT(tvgame)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(IS_DEBUG $ENV{DEBUG_ENV})
MESSAGE(STATUS $ENV{DEBUG_ENV})
SET(IS_TX_YYB $ENV{TX_YYB_ENV})

IF(IS_DEBUG)
	SET(CPP_COMPILE_OPT "-g  -Wno-deprecated -Werror -DUNIV_LINUX -rdynamic -Wall -Wno-deprecated -D_GNU_SOURCE -D_REENTRANT -D_ALL_DEBUG  $ENV{ATHENA_OPTIONS} -D_DB_STAT")
ELSE(IS_DEBUG)
	IF(IS_TX_YYB)
		SET(CPP_COMPILE_OPT "-g -Werror -Wno-deprecated -fno-strict-aliasing -O2 -D_TX_YYB")
	ELSE(IS_TX_YYB)
		SET(CPP_COMPILE_OPT "-g -Werror -Wno-deprecated -fno-strict-aliasing")
	ENDIF(IS_TX_YYB)
ENDIF(IS_DEBUG)

MESSAGE(STATUS ${CPP_COMPILE_OPT})
MESSAGE(STATUS ${CMAKE_CXX_COMPILER})

IF(WIN32)
	MESSAGE(STATUS "生成window相关的配置")
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/svrlib)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/common)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/GameServer)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Proto)
ELSE(WIN32)
	MESSAGE(STATUS "生成LINUX相关配置")
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/log4cxx)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/mysql)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/apr)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/zlib)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/protobuf)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/svrlib)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/curl)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/tinyxml)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/hiredis)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/include/openssl)

	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/tmxparser)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/common)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/GameServer)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Proto)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/navi)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/navi)
	#INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/netlib)
	
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/zlib)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/mysql)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/tinyxml)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/log4cxx)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/apr)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/aprutil)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/protobuf)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/tcmalloc)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/svrlib)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/curl)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/hiredis)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../3rd/lib/openssl)

	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/common)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/GameServer)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/Proto)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/jsoncpp)
	#LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/netlib)
ENDIF(WIN32)

	LINK_LIBRARIES(tcmalloc jsoncpp hiredis rt curl Proto common commGame util mysqlclient_r pthread crypt netlib nsl m z tinyxml	log4cxx apr-1 aprutil-1 protobuf)

ADD_DEFINITIONS(${CPP_COMPILE_OPT})
SET(CMAKE_EXE_LINKER_FLAGS  "-Wl,-rpath,../3rd/lib/zlib")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}  -Wl,-rpath,../3rd/lib/mysql")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}  -Wl,-rpath,../3rd/lib/aprutil")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,../3rd/lib/apr -Wl,-rpath,../3rd/lib/log4cxx")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,../3rd/lib/curl")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,../3rd/lib/tcmalloc")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,../3rd/lib/protobuf")
SET(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,../3rd/lib/hiredis")

ADD_SUBDIRECTORY(jsoncpp jsoncpp)
#ADD_SUBDIRECTORY(util util)
#ADD_SUBDIRECTORY(netlib netlib)
ADD_SUBDIRECTORY(common common)
ADD_SUBDIRECTORY(GameServer GameServer)
ADD_SUBDIRECTORY(Proto Proto)
ADD_SUBDIRECTORY(WebServer WebServer)
ADD_SUBDIRECTORY(PubServer PubServer)
ADD_SUBDIRECTORY(GlobalServer GlobalServer)
ADD_SUBDIRECTORY(NormalGameServer NormalGameServer)
ADD_SUBDIRECTORY(GateServer  GateServer)
ADD_SUBDIRECTORY(Test Test)
ADD_SUBDIRECTORY(FetAppCfgTool FetAppCfgTool)
ADD_SUBDIRECTORY(FetAppCfgToolTx FetAppCfgToolTx)
ADD_SUBDIRECTORY(LoginServer LoginServer)
