// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ModID.proto

#ifndef PROTOBUF_ModID_2eproto__INCLUDED
#define PROTOBUF_ModID_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ModID_2eproto();
void protobuf_AssignDesc_ModID_2eproto();
void protobuf_ShutdownFile_ModID_2eproto();


enum ModID {
  LOGIN_MOD = 1,
  ROLE_MOD = 2,
  MAP_MOD = 3,
  TASK_MOD = 4,
  FRIEND_MOD = 5,
  SORTLIST_MOD = 6,
  GUILD_MOD = 7,
  MISC_MOD = 8,
  TEAM_MOD = 9,
  MISC2_MOD = 10
};
bool ModID_IsValid(int value);
const ModID ModID_MIN = LOGIN_MOD;
const ModID ModID_MAX = MISC2_MOD;
const int ModID_ARRAYSIZE = ModID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModID_descriptor();
inline const ::std::string& ModID_Name(ModID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModID_descriptor(), value);
}
inline bool ModID_Parse(
    const ::std::string& name, ModID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModID>(
    ModID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Proto::ModID>() {
  return ::Proto::ModID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ModID_2eproto__INCLUDED
