// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.proto

#ifndef PROTOBUF_scene_2eproto__INCLUDED
#define PROTOBUF_scene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Info {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_scene_2eproto();
void protobuf_AssignDesc_scene_2eproto();
void protobuf_ShutdownFile_scene_2eproto();

class Serial_SceneInfo;
class Serial_SceneInfo_posObsData;
class Serial_SceneInfo_posEnvData;

enum Serial_EObstacle {
  Move = 1,
  Skill = 2,
  Dynamic = 4,
  Decoration = 8
};
bool Serial_EObstacle_IsValid(int value);
const Serial_EObstacle Serial_EObstacle_MIN = Move;
const Serial_EObstacle Serial_EObstacle_MAX = Decoration;
const int Serial_EObstacle_ARRAYSIZE = Serial_EObstacle_MAX + 1;

const ::google::protobuf::EnumDescriptor* Serial_EObstacle_descriptor();
inline const ::std::string& Serial_EObstacle_Name(Serial_EObstacle value) {
  return ::google::protobuf::internal::NameOfEnum(
    Serial_EObstacle_descriptor(), value);
}
inline bool Serial_EObstacle_Parse(
    const ::std::string& name, Serial_EObstacle* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Serial_EObstacle>(
    Serial_EObstacle_descriptor(), name, value);
}
enum Serial_EEnviroment {
  Desert = 1,
  Forest = 2,
  Plain = 4,
  Moutain = 8,
  Ocean = 16,
  Building = 32,
  Floor = 64
};
bool Serial_EEnviroment_IsValid(int value);
const Serial_EEnviroment Serial_EEnviroment_MIN = Desert;
const Serial_EEnviroment Serial_EEnviroment_MAX = Floor;
const int Serial_EEnviroment_ARRAYSIZE = Serial_EEnviroment_MAX + 1;

const ::google::protobuf::EnumDescriptor* Serial_EEnviroment_descriptor();
inline const ::std::string& Serial_EEnviroment_Name(Serial_EEnviroment value) {
  return ::google::protobuf::internal::NameOfEnum(
    Serial_EEnviroment_descriptor(), value);
}
inline bool Serial_EEnviroment_Parse(
    const ::std::string& name, Serial_EEnviroment* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Serial_EEnviroment>(
    Serial_EEnviroment_descriptor(), name, value);
}
enum Serial_EGameUnit {
  Store = 1,
  Portal = 2
};
bool Serial_EGameUnit_IsValid(int value);
const Serial_EGameUnit Serial_EGameUnit_MIN = Store;
const Serial_EGameUnit Serial_EGameUnit_MAX = Portal;
const int Serial_EGameUnit_ARRAYSIZE = Serial_EGameUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* Serial_EGameUnit_descriptor();
inline const ::std::string& Serial_EGameUnit_Name(Serial_EGameUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    Serial_EGameUnit_descriptor(), value);
}
inline bool Serial_EGameUnit_Parse(
    const ::std::string& name, Serial_EGameUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Serial_EGameUnit>(
    Serial_EGameUnit_descriptor(), name, value);
}
// ===================================================================

class Serial_SceneInfo_posObsData : public ::google::protobuf::Message {
 public:
  Serial_SceneInfo_posObsData();
  virtual ~Serial_SceneInfo_posObsData();

  Serial_SceneInfo_posObsData(const Serial_SceneInfo_posObsData& from);

  inline Serial_SceneInfo_posObsData& operator=(const Serial_SceneInfo_posObsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Serial_SceneInfo_posObsData& default_instance();

  void Swap(Serial_SceneInfo_posObsData* other);

  // implements Message ----------------------------------------------

  Serial_SceneInfo_posObsData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Serial_SceneInfo_posObsData& from);
  void MergeFrom(const Serial_SceneInfo_posObsData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional .Info.Serial_EObstacle value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::Info::Serial_EObstacle value() const;
  inline void set_value(::Info::Serial_EObstacle value);

  // @@protoc_insertion_point(class_scope:Info.Serial_SceneInfo.posObsData)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  int value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Serial_SceneInfo_posObsData* default_instance_;
};
// -------------------------------------------------------------------

class Serial_SceneInfo_posEnvData : public ::google::protobuf::Message {
 public:
  Serial_SceneInfo_posEnvData();
  virtual ~Serial_SceneInfo_posEnvData();

  Serial_SceneInfo_posEnvData(const Serial_SceneInfo_posEnvData& from);

  inline Serial_SceneInfo_posEnvData& operator=(const Serial_SceneInfo_posEnvData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Serial_SceneInfo_posEnvData& default_instance();

  void Swap(Serial_SceneInfo_posEnvData* other);

  // implements Message ----------------------------------------------

  Serial_SceneInfo_posEnvData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Serial_SceneInfo_posEnvData& from);
  void MergeFrom(const Serial_SceneInfo_posEnvData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // optional .Info.Serial_EEnviroment value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::Info::Serial_EEnviroment value() const;
  inline void set_value(::Info::Serial_EEnviroment value);

  // @@protoc_insertion_point(class_scope:Info.Serial_SceneInfo.posEnvData)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  int value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Serial_SceneInfo_posEnvData* default_instance_;
};
// -------------------------------------------------------------------

class Serial_SceneInfo : public ::google::protobuf::Message {
 public:
  Serial_SceneInfo();
  virtual ~Serial_SceneInfo();

  Serial_SceneInfo(const Serial_SceneInfo& from);

  inline Serial_SceneInfo& operator=(const Serial_SceneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Serial_SceneInfo& default_instance();

  void Swap(Serial_SceneInfo* other);

  // implements Message ----------------------------------------------

  Serial_SceneInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Serial_SceneInfo& from);
  void MergeFrom(const Serial_SceneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Serial_SceneInfo_posObsData posObsData;
  typedef Serial_SceneInfo_posEnvData posEnvData;

  // accessors -------------------------------------------------------

  // optional uint32 nX = 1;
  inline bool has_nx() const;
  inline void clear_nx();
  static const int kNXFieldNumber = 1;
  inline ::google::protobuf::uint32 nx() const;
  inline void set_nx(::google::protobuf::uint32 value);

  // optional uint32 nY = 2;
  inline bool has_ny() const;
  inline void clear_ny();
  static const int kNYFieldNumber = 2;
  inline ::google::protobuf::uint32 ny() const;
  inline void set_ny(::google::protobuf::uint32 value);

  // repeated .Info.Serial_SceneInfo.posObsData obstacle = 3;
  inline int obstacle_size() const;
  inline void clear_obstacle();
  static const int kObstacleFieldNumber = 3;
  inline const ::Info::Serial_SceneInfo_posObsData& obstacle(int index) const;
  inline ::Info::Serial_SceneInfo_posObsData* mutable_obstacle(int index);
  inline ::Info::Serial_SceneInfo_posObsData* add_obstacle();
  inline const ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posObsData >&
      obstacle() const;
  inline ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posObsData >*
      mutable_obstacle();

  // repeated .Info.Serial_SceneInfo.posEnvData enviroment = 4;
  inline int enviroment_size() const;
  inline void clear_enviroment();
  static const int kEnviromentFieldNumber = 4;
  inline const ::Info::Serial_SceneInfo_posEnvData& enviroment(int index) const;
  inline ::Info::Serial_SceneInfo_posEnvData* mutable_enviroment(int index);
  inline ::Info::Serial_SceneInfo_posEnvData* add_enviroment();
  inline const ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posEnvData >&
      enviroment() const;
  inline ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posEnvData >*
      mutable_enviroment();

  // @@protoc_insertion_point(class_scope:Info.Serial_SceneInfo)
 private:
  inline void set_has_nx();
  inline void clear_has_nx();
  inline void set_has_ny();
  inline void clear_has_ny();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 nx_;
  ::google::protobuf::uint32 ny_;
  ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posObsData > obstacle_;
  ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posEnvData > enviroment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_scene_2eproto();
  friend void protobuf_AssignDesc_scene_2eproto();
  friend void protobuf_ShutdownFile_scene_2eproto();

  void InitAsDefaultInstance();
  static Serial_SceneInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// Serial_SceneInfo_posObsData

// optional uint32 x = 1;
inline bool Serial_SceneInfo_posObsData::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Serial_SceneInfo_posObsData::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Serial_SceneInfo_posObsData::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Serial_SceneInfo_posObsData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 Serial_SceneInfo_posObsData::x() const {
  return x_;
}
inline void Serial_SceneInfo_posObsData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 2;
inline bool Serial_SceneInfo_posObsData::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Serial_SceneInfo_posObsData::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Serial_SceneInfo_posObsData::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Serial_SceneInfo_posObsData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 Serial_SceneInfo_posObsData::y() const {
  return y_;
}
inline void Serial_SceneInfo_posObsData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// optional .Info.Serial_EObstacle value = 3;
inline bool Serial_SceneInfo_posObsData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Serial_SceneInfo_posObsData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Serial_SceneInfo_posObsData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Serial_SceneInfo_posObsData::clear_value() {
  value_ = 1;
  clear_has_value();
}
inline ::Info::Serial_EObstacle Serial_SceneInfo_posObsData::value() const {
  return static_cast< ::Info::Serial_EObstacle >(value_);
}
inline void Serial_SceneInfo_posObsData::set_value(::Info::Serial_EObstacle value) {
  assert(::Info::Serial_EObstacle_IsValid(value));
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// Serial_SceneInfo_posEnvData

// optional uint32 x = 1;
inline bool Serial_SceneInfo_posEnvData::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Serial_SceneInfo_posEnvData::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Serial_SceneInfo_posEnvData::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Serial_SceneInfo_posEnvData::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 Serial_SceneInfo_posEnvData::x() const {
  return x_;
}
inline void Serial_SceneInfo_posEnvData::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
}

// optional uint32 y = 2;
inline bool Serial_SceneInfo_posEnvData::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Serial_SceneInfo_posEnvData::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Serial_SceneInfo_posEnvData::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Serial_SceneInfo_posEnvData::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 Serial_SceneInfo_posEnvData::y() const {
  return y_;
}
inline void Serial_SceneInfo_posEnvData::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
}

// optional .Info.Serial_EEnviroment value = 3;
inline bool Serial_SceneInfo_posEnvData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Serial_SceneInfo_posEnvData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Serial_SceneInfo_posEnvData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Serial_SceneInfo_posEnvData::clear_value() {
  value_ = 1;
  clear_has_value();
}
inline ::Info::Serial_EEnviroment Serial_SceneInfo_posEnvData::value() const {
  return static_cast< ::Info::Serial_EEnviroment >(value_);
}
inline void Serial_SceneInfo_posEnvData::set_value(::Info::Serial_EEnviroment value) {
  assert(::Info::Serial_EEnviroment_IsValid(value));
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// Serial_SceneInfo

// optional uint32 nX = 1;
inline bool Serial_SceneInfo::has_nx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Serial_SceneInfo::set_has_nx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Serial_SceneInfo::clear_has_nx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Serial_SceneInfo::clear_nx() {
  nx_ = 0u;
  clear_has_nx();
}
inline ::google::protobuf::uint32 Serial_SceneInfo::nx() const {
  return nx_;
}
inline void Serial_SceneInfo::set_nx(::google::protobuf::uint32 value) {
  set_has_nx();
  nx_ = value;
}

// optional uint32 nY = 2;
inline bool Serial_SceneInfo::has_ny() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Serial_SceneInfo::set_has_ny() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Serial_SceneInfo::clear_has_ny() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Serial_SceneInfo::clear_ny() {
  ny_ = 0u;
  clear_has_ny();
}
inline ::google::protobuf::uint32 Serial_SceneInfo::ny() const {
  return ny_;
}
inline void Serial_SceneInfo::set_ny(::google::protobuf::uint32 value) {
  set_has_ny();
  ny_ = value;
}

// repeated .Info.Serial_SceneInfo.posObsData obstacle = 3;
inline int Serial_SceneInfo::obstacle_size() const {
  return obstacle_.size();
}
inline void Serial_SceneInfo::clear_obstacle() {
  obstacle_.Clear();
}
inline const ::Info::Serial_SceneInfo_posObsData& Serial_SceneInfo::obstacle(int index) const {
  return obstacle_.Get(index);
}
inline ::Info::Serial_SceneInfo_posObsData* Serial_SceneInfo::mutable_obstacle(int index) {
  return obstacle_.Mutable(index);
}
inline ::Info::Serial_SceneInfo_posObsData* Serial_SceneInfo::add_obstacle() {
  return obstacle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posObsData >&
Serial_SceneInfo::obstacle() const {
  return obstacle_;
}
inline ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posObsData >*
Serial_SceneInfo::mutable_obstacle() {
  return &obstacle_;
}

// repeated .Info.Serial_SceneInfo.posEnvData enviroment = 4;
inline int Serial_SceneInfo::enviroment_size() const {
  return enviroment_.size();
}
inline void Serial_SceneInfo::clear_enviroment() {
  enviroment_.Clear();
}
inline const ::Info::Serial_SceneInfo_posEnvData& Serial_SceneInfo::enviroment(int index) const {
  return enviroment_.Get(index);
}
inline ::Info::Serial_SceneInfo_posEnvData* Serial_SceneInfo::mutable_enviroment(int index) {
  return enviroment_.Mutable(index);
}
inline ::Info::Serial_SceneInfo_posEnvData* Serial_SceneInfo::add_enviroment() {
  return enviroment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posEnvData >&
Serial_SceneInfo::enviroment() const {
  return enviroment_;
}
inline ::google::protobuf::RepeatedPtrField< ::Info::Serial_SceneInfo_posEnvData >*
Serial_SceneInfo::mutable_enviroment() {
  return &enviroment_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Info

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Info::Serial_EObstacle>() {
  return ::Info::Serial_EObstacle_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Info::Serial_EEnviroment>() {
  return ::Info::Serial_EEnviroment_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Info::Serial_EGameUnit>() {
  return ::Info::Serial_EGameUnit_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scene_2eproto__INCLUDED
